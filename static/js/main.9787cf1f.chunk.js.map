{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionsHistory/Transaction.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/default.jpg","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionsHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","followers","views","likes","className","styles","profile","description","src","alt","width","stats","item","label","quantity","defaultProps","defaultAvatar","randColor","r","Math","floor","random","g","b","toString","Statistics","title","statistics","statList","map","style","backgroundColor","percentage","id","FriendListItem","isOnline","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","rowName","transaction","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9787cf1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1xsMO\",\"avatar\":\"Profile_avatar__2EJNb\",\"name\":\"Profile_name__3FQ39\",\"tag\":\"Profile_tag__2uN-O\",\"location\":\"Profile_location__59YAb\",\"stats\":\"Profile_stats__WM3Hr\",\"item\":\"Profile_item__1CELV\",\"label\":\"Profile_label__2Y1_Z\",\"quantity\":\"Profile_quantity__nJ4_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transaction_transactionHistory__1-qir\",\"rowName\":\"Transaction_rowName__slc_G\",\"name\":\"Transaction_name__3hQ54\",\"transaction\":\"Transaction_transaction__10q9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__pn_h5\",\"item\":\"FriendList_item__1wa9Q\",\"statusOnline\":\"FriendList_statusOnline__1-hpW\",\"statusOffline\":\"FriendList_statusOffline__3Oo71\",\"avatar\":\"FriendList_avatar__3yO44\",\"name\":\"FriendList_name__idcd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__15AqW\",\"title\":\"Statistics_title__3ZvUk\",\"statList\":\"Statistics_statList__26pUM\",\"item\":\"Statistics_item__2zueS\",\"label\":\"Statistics_label__VY05S\",\"percentage\":\"Statistics_percentage__33I_b\"};","export default __webpack_public_path__ + \"static/media/default.24082154.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport defaultAvatar from \"../default.jpg\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\nconst Profile = ({name, tag, location, avatar, followers, views, likes}) => (\r\n        <div className={styles.profile} >\r\n            <div className={styles.description}>\r\n                <img\r\n                    src={avatar}\r\n                    alt={name}\r\n                    width='120px'\r\n                    className={styles.avatar}\r\n                />\r\n                <p className={styles.name}>{name}</p>\r\n                <p className={styles.tag}>@{tag}</p>\r\n                <p className={styles.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={styles.stats}>\r\n                <li className={styles.item}>\r\n                    <span className={styles.label}>Followers</span>\r\n                    <span className={styles.quantity}>{followers}</span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.label}>Views</span>\r\n                    <span className={styles.quantity}>{views}</span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.label}>Likes</span>\r\n                    <span className={styles.quantity}>{likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n    avatar: defaultAvatar,\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired, \r\n    likes: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nfunction randColor() {\r\n  var r = Math.floor(Math.random() * (256)),\r\n      g = Math.floor(Math.random() * (256)),\r\n      b = Math.floor(Math.random() * (256));\r\n  return '#' + r.toString(16) + g.toString(16) + b.toString(16);\r\n}\r\n\r\nconst Statistics = ({title, stats}) => (\r\n    <section className={styles.statistics}>\r\n        {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n        <ul className={styles.statList}>\r\n        {stats.map(\r\n          item =>\r\n            <li className={styles.item} key={item.id} style={{ backgroundColor: randColor() }}>\r\n              <span className={styles.label}>{item.label}</span>\r\n              <span className={styles.percentage}>{item.percentage + ' %'}</span>\r\n            </li>\r\n            \r\n        )}\r\n            \r\n  </ul>\r\n</section>\r\n)\r\n\r\nStatistics.defaultProps = {\r\n    title: null,\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        label: PropTypes.string,\r\n        percentage: PropTypes.number,\r\n      })\r\n    ),\r\n  };\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport defaultAvatar from \"../default.jpg\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./FriendList.module.css\";\r\n\r\nconst FriendListItem = ({avatar, name, isOnline}) => (\r\n    <li className={styles.item}>\r\n        <span className={isOnline ? styles['statusOnline'] : styles['statusOffline']}></span>\r\n        <img className={styles.avatar} src={avatar} alt={name} width=\"60\" />\r\n        <p className={styles.name}>{name}</p>\r\n    </li>\r\n)\r\n\r\nFriendListItem.defaultProps = {\r\n    avatar: defaultAvatar\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    name: PropTypes.string,\r\n    isOnline: PropTypes.bool,\r\n}\r\n\r\nexport default FriendListItem;","import React from 'react';\r\nimport FriendListItem from \"./FriendListItem\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./FriendList.module.css\";\r\n\r\nconst FriendList = ({friends}) => (\r\n        <ul className={styles.friendList}>\r\n            {friends.map((friend) => (\r\n             <li key={friend.id}>\r\n                <FriendListItem \r\n                avatar = {friend.avatar}\r\n                name = {friend.name}\r\n                isOnline ={friend.isOnline}\r\n            />\r\n            </li>\r\n            ))}\r\n        </ul>  \r\n);\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          name: PropTypes.string,\r\n          isOnline:PropTypes.string,\r\n        })\r\n      ),\r\n}\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Transaction.module.css\";\r\n\r\nconst TransactionHistory = ({items}) => (\r\n    <table className={styles.transactionHistory}>\r\n  <thead>\r\n    <tr className={styles.rowName}>\r\n      <th className={styles.name}>Type</th>\r\n      <th className={styles.name}>Amount</th>\r\n      <th className={styles.name}>Currency</th>\r\n    </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n  {items.map((item) => (\r\n    <tr>\r\n      <td className={styles.transaction}>{item.type}</td>\r\n      <td className={styles.transaction}>{item.amount}</td>\r\n      <td className={styles.transaction}>{item.currency}</td>\r\n    </tr>\r\n    ))}\r\n  </tbody>\r\n</table>\r\n);\r\nTransactionHistory.propTypes = {\r\n    item: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          type: PropTypes.string,\r\n          amount: PropTypes.number,\r\n          currency:PropTypes.string,\r\n        })\r\n      ),\r\n}\r\n\r\nexport default TransactionHistory;","import React from 'react';\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport TransactionHistory from \"./components/TransactionsHistory/TransactionHistory\";\nimport user from \"./user.json\";\nimport statisticalData from \"./statistical-data.json\";\nimport friends from \"./friends.json\";\nimport transactions from \"./transactions.json\";\n\nconst App = () => {\n    return (\n        <div>\n            <Profile\n              name={user.name}\n              tag={user.tag}\n              location={user.location}\n              avatar={user.avatar}\n              followers={user.stats.followers}\n              views={user.stats.views}\n              likes={user.stats.likes}\n              />\n            <Statistics \n              title=\"Upload stats\" \n              stats={statisticalData} \n            />\n            <FriendList \n              friends={friends} \n            />\n            <TransactionHistory \n              items={transactions} \n              />;\n\n        </div>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}